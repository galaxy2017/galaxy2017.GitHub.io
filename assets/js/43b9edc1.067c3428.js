"use strict";(self.webpackChunkdocs_luomoe_com=self.webpackChunkdocs_luomoe_com||[]).push([[2168],{3905:(n,t,e)=>{e.d(t,{Zo:()=>u,kt:()=>S});var r=e(7294);function a(n,t,e){return t in n?Object.defineProperty(n,t,{value:e,enumerable:!0,configurable:!0,writable:!0}):n[t]=e,n}function i(n,t){var e=Object.keys(n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(n);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(n,t).enumerable}))),e.push.apply(e,r)}return e}function l(n){for(var t=1;t<arguments.length;t++){var e=null!=arguments[t]?arguments[t]:{};t%2?i(Object(e),!0).forEach((function(t){a(n,t,e[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(e)):i(Object(e)).forEach((function(t){Object.defineProperty(n,t,Object.getOwnPropertyDescriptor(e,t))}))}return n}function s(n,t){if(null==n)return{};var e,r,a=function(n,t){if(null==n)return{};var e,r,a={},i=Object.keys(n);for(r=0;r<i.length;r++)e=i[r],t.indexOf(e)>=0||(a[e]=n[e]);return a}(n,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(n);for(r=0;r<i.length;r++)e=i[r],t.indexOf(e)>=0||Object.prototype.propertyIsEnumerable.call(n,e)&&(a[e]=n[e])}return a}var o=r.createContext({}),p=function(n){var t=r.useContext(o),e=t;return n&&(e="function"==typeof n?n(t):l(l({},t),n)),e},u=function(n){var t=p(n.components);return r.createElement(o.Provider,{value:t},n.children)},m="mdxType",c={inlineCode:"code",wrapper:function(n){var t=n.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(n,t){var e=n.components,a=n.mdxType,i=n.originalType,o=n.parentName,u=s(n,["components","mdxType","originalType","parentName"]),m=p(e),d=a,S=m["".concat(o,".").concat(d)]||m[d]||c[d]||i;return e?r.createElement(S,l(l({ref:t},u),{},{components:e})):r.createElement(S,l({ref:t},u))}));function S(n,t){var e=arguments,a=t&&t.mdxType;if("string"==typeof n||a){var i=e.length,l=new Array(i);l[0]=d;var s={};for(var o in t)hasOwnProperty.call(t,o)&&(s[o]=t[o]);s.originalType=n,s[m]="string"==typeof n?n:a,l[1]=s;for(var p=2;p<i;p++)l[p]=e[p];return r.createElement.apply(null,l)}return r.createElement.apply(null,e)}d.displayName="MDXCreateElement"},6696:(n,t,e)=>{e.r(t),e.d(t,{assets:()=>o,contentTitle:()=>l,default:()=>m,frontMatter:()=>i,metadata:()=>s,toc:()=>p});var r=e(7462),a=(e(7294),e(3905));const i={title:"java \u96c6\u5408\u6846\u67b6",sidebar_position:3},l=void 0,s={unversionedId:"Java/comF",id:"Java/comF",title:"java \u96c6\u5408\u6846\u67b6",description:"\u4e00\u3001\u96c6\u5408\u6982\u5ff5",source:"@site/docs/Java/comF.md",sourceDirName:"Java",slug:"/Java/comF",permalink:"/docs/Java/comF",draft:!1,tags:[],version:"current",sidebarPosition:3,frontMatter:{title:"java \u96c6\u5408\u6846\u67b6",sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"\u516b\u5927\u5e38\u7528\u7c7b",permalink:"/docs/Java/eiCom"},next:{title:"IO\u6d41",permalink:"/docs/Java/io"}},o={},p=[{value:"\u4e00\u3001\u96c6\u5408\u6982\u5ff5",id:"\u4e00\u96c6\u5408\u6982\u5ff5",level:2},{value:"\u548c\u6570\u7ec4\u7684\u533a\u522b",id:"\u548c\u6570\u7ec4\u7684\u533a\u522b",level:3},{value:"\u4e8c\u3001Collection",id:"\u4e8ccollection",level:2},{value:"2.1 Collection\u4f53\u7cfb",id:"21-collection\u4f53\u7cfb",level:3},{value:"2.2 Collection\u63a5\u53e3",id:"22-collection\u63a5\u53e3",level:3},{value:"2.3 Collection\u4f7f\u7528",id:"23-collection\u4f7f\u7528",level:3},{value:"\u4e09\u3001List\u63a5\u53e3\u4e0e\u5b9e\u73b0\u7c7b",id:"\u4e09list\u63a5\u53e3\u4e0e\u5b9e\u73b0\u7c7b",level:2},{value:"3.1 List\u5b50\u63a5\u53e3",id:"31-list\u5b50\u63a5\u53e3",level:3},{value:"3.2 List\u63a5\u53e3\u4f7f\u7528",id:"32-list\u63a5\u53e3\u4f7f\u7528",level:3},{value:"3.3 List\u5b9e\u73b0\u7c7b",id:"33-list\u5b9e\u73b0\u7c7b",level:3},{value:"3.3.1ArrayList\u3010\u91cd\u70b9\u3011",id:"331arraylist\u91cd\u70b9",level:4},{value:"3.3.2\u6e90\u7801\u5206\u6790",id:"332\u6e90\u7801\u5206\u6790",level:4},{value:"3.4 Vector\uff08\u5c11\u7528\uff09",id:"34-vector\u5c11\u7528",level:3},{value:"3.5 LinkedList  \uff08\u94fe\u8868\uff09",id:"35-linkedlist--\u94fe\u8868",level:3},{value:"3.7 \u6e90\u7801\u5206\u6790",id:"37-\u6e90\u7801\u5206\u6790",level:3},{value:"ArrayList\u548cLinkedList\u7684\u533a\u522b",id:"arraylist\u548clinkedlist\u7684\u533a\u522b",level:4},{value:"\u56db\u3001\u6cdb\u578b\u548c\u5de5\u5177\u680f",id:"\u56db\u6cdb\u578b\u548c\u5de5\u5177\u680f",level:2},{value:"4.1\u6cdb\u578b\u65b9\u6cd5",id:"41\u6cdb\u578b\u65b9\u6cd5",level:3},{value:"4.2\u6cdb\u578b\u7c7b",id:"42\u6cdb\u578b\u7c7b",level:3},{value:"4.3\u6cdb\u578b\u63a5\u53e3",id:"43\u6cdb\u578b\u63a5\u53e3",level:3},{value:"4.4 \u6cdb\u578b\u65b9\u6cd5",id:"44-\u6cdb\u578b\u65b9\u6cd5",level:3},{value:"4.5\u6cdb\u578b\u96c6\u5408",id:"45\u6cdb\u578b\u96c6\u5408",level:3},{value:"\u4e94\u3001Set\u63a5\u53e3\u4e0e\u5b9e\u73b0\u7c7b",id:"\u4e94set\u63a5\u53e3\u4e0e\u5b9e\u73b0\u7c7b",level:2},{value:"5.1HashSet\uff08\u91cd\u70b9\uff09",id:"51hashset\u91cd\u70b9",level:3},{value:"5.1.1 \u4f7f\u7528\u4e00",id:"511-\u4f7f\u7528\u4e00",level:4},{value:"5.1.2\u4f7f\u7528\u4e8c",id:"512\u4f7f\u7528\u4e8c",level:4},{value:"5.2 TreeSet",id:"52-treeset",level:3},{value:"5.2.1TreeSet\u6982\u8ff0",id:"521treeset\u6982\u8ff0",level:4},{value:"5.2.2 TreeSet\u4f7f\u7528",id:"522-treeset\u4f7f\u7528",level:4},{value:"5.2.3 Comparato\u63a5\u53e3",id:"523-comparato\u63a5\u53e3",level:4},{value:"5.2.4 TreeSet\u6848\u4f8b",id:"524-treeset\u6848\u4f8b",level:4},{value:"\u516d\u3001Map\u63a5\u53e3\u4e0e\u5b9e\u73b0\u7c7b",id:"\u516dmap\u63a5\u53e3\u4e0e\u5b9e\u73b0\u7c7b",level:2},{value:"6.1 Map\u96c6\u5408\u6982\u8ff0",id:"61-map\u96c6\u5408\u6982\u8ff0",level:3},{value:"6.2 Map\u63a5\u53e3",id:"62-map\u63a5\u53e3",level:3},{value:"6.3 HashMap\u4f7f\u7528\uff08\u91cd\u70b9\uff09",id:"63-hashmap\u4f7f\u7528\u91cd\u70b9",level:3},{value:"6.4Hashtable\u548cProperties",id:"64hashtable\u548cproperties",level:3},{value:"6.5 TreeMap",id:"65-treemap",level:3},{value:"\u4e03\u3001Collections  \u5de5\u5177\u7c7b",id:"\u4e03collections--\u5de5\u5177\u7c7b",level:2}],u={toc:p};function m(n){let{components:t,...e}=n;return(0,a.kt)("wrapper",(0,r.Z)({},u,e,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"java-\u96c6\u5408\u6846\u67b6"},"java \u96c6\u5408\u6846\u67b6"),(0,a.kt)("h2",{id:"\u4e00\u96c6\u5408\u6982\u5ff5"},"\u4e00\u3001\u96c6\u5408\u6982\u5ff5"),(0,a.kt)("p",null,"\u5bf9\u8c61\u7684\u5bb9\u5668\uff0c\u5b9a\u4e49\u4e86\u5bf9\u591a\u4e2a\u5bf9\u8c61\u8fdb\u884c\u64cd\u4f5c\u7684\u5e38\u7528\u65b9\u6cd5\uff0c\u53ef\u4ee5\u5b9e\u73b0\u6570\u7ec4\u7684\u529f\u80fd"),(0,a.kt)("h3",{id:"\u548c\u6570\u7ec4\u7684\u533a\u522b"},"\u548c\u6570\u7ec4\u7684\u533a\u522b"),(0,a.kt)("p",null,"\uff081\uff09\u6570\u7ec4\u957f\u5ea6\u56fa\u5b9a\uff0c\u96c6\u5408\u957f\u5ea6\u4e0d\u56fa\u5b9a"),(0,a.kt)("p",null,"\uff082\uff09\u6570\u7ec4\u53ef\u4ee5\u5b58\u50a8\u57fa\u672c\u7c7b\u578b\u548c\u5f15\u7528\u7c7b\u578b\uff0c\u96c6\u5408\u53ea\u80fd\u5b58\u50a8\u5f15\u7528\u7c7b\u578b"),(0,a.kt)("p",null,"\uff083\uff09\u4f4d\u7f6e java.util.*"),(0,a.kt)("h2",{id:"\u4e8ccollection"},"\u4e8c\u3001Collection"),(0,a.kt)("h3",{id:"21-collection\u4f53\u7cfb"},"2.1 Collection\u4f53\u7cfb"),(0,a.kt)("p",null,(0,a.kt)("img",{parentName:"p",src:"https://img.up.cdn.nahida.cn/2022/07/image-20220624105051041.png",alt:"image-20220624105051041"})),(0,a.kt)("h3",{id:"22-collection\u63a5\u53e3"},"2.2 Collection\u63a5\u53e3"),(0,a.kt)("p",null,"\u7279\u70b9\uff1a\u4ee3\u8868\u4e00\u7ec4\u4efb\u610f\u7c7b\u578b\u7684\u5bf9\u8c61\uff0c\u65e0\u5e8f\u3001\u65e0\u4e0b\u6807\u3001\u4e0d\u80fd\u91cd\u590d"),(0,a.kt)("h3",{id:"23-collection\u4f7f\u7528"},"2.3 Collection\u4f7f\u7528"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},'package oop3;\n\nimport java.util.ArrayList;\nimport java.util.Collection;\nimport java.util.Iterator;\n\n/**\n * Collection\u63a5\u53e3\u7684\u4f7f\u7528\n * \uff081\uff09\u6dfb\u52a0\n * \uff082\uff09\u5220\u9664\n * \uff083\uff09\u904d\u5386\u5143\u7d20\n * \uff084\uff09\u5224\u65ad\n */\npublic class TestA {\n    public static void main(String[] args) {\n        //\u521b\u5efa\u96c6\u5408\n        Collection collection = new ArrayList();\n        //\u6dfb\u52a0\n        collection.add("\u82f9\u679c");\n        collection.add("\u9999\u8549");\n        collection.add("\u897f\u74dc");\n        System.out.println("\u5143\u7d20\u4e2a\u6570"+collection.size());\n        //\u5220\u9664\n        collection.remove("\u897f\u74dc");\n        System.out.println("\u5143\u7d20\u4e2a\u6570"+collection.size());\n        //\u6e05\u7a7a   collection.clear();\n\n        //\u904d\u5386\n        //\u589e\u5f3afor\u7684\u904d\u5386   ,\u4e00\u822c\u7684for\u5faa\u73af\u4e0d\u80fd\u4f7f\u7528\uff0c\u56e0\u4e3aArrayList\u6ca1\u6709\u4e0b\u6807\uff0c\u904d\u5386\u4e0d\u4e86\n        for (Object o :collection){\n            System.out.println(o);\n        }\n\n        // \u4f7f\u7528\u8fed\u4ee3\u5668\u904d\u5386\n        //hasNext\uff08\uff09\uff1b \u6709\u6ca1\u6709\u4e0b\u4e00\u4e2a\u5143\u7d20\n        // next(); \u83b7\u53d6\u4e0b\u4e00\u4e2a\u5143\u7d20\n        // remove\uff08\uff09\uff1b \u5220\u9664\u5f53\u524d\u5143\u7d20\n        Iterator it = collection.iterator();\n        while (it.hasNext()){                       //\u4f7f\u7528\u8fed\u4ee3\u5668\u4e0d\u80fd\u4f7f\u7528  collection.remove(),\n                                                    // \u4f46\u662f\u53ef\u4ee5\u4f7f\u7528it.remove();\n            String s = (String) it.next();\n            System.out.println(s);\n            it.remove();\n        }\n        System.out.println("\u5143\u7d20\u4e2a\u6570"+collection.size());\n\n        //\u5224\u65ad\u662f\u5426\u6709xx\u5143\u7d20\n        System.out.println(collection.contains("\u82f9\u679c"));\n\n\n    }\n}\n')),(0,a.kt)("p",null,"\u4f7f\u75282"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},'package oop3;\n\nimport java.util.ArrayList;\nimport java.util.Collection;\nimport java.util.Iterator;\n\n/**\n * collection\u7684\u4f7f\u7528\uff1a\u4fdd\u5b58\u5b66\u751f\u4fe1\u606f\n */\n\npublic class TestB {\n    public static void main(String[] args) {\n        //\u65b0\u5efa\u4e00\u4e2acollection\u5bf9\u8c61\n        Collection collection = new ArrayList();\n        //\u6dfb\u52a0\n        Student s1 = new Student("\u5f20\u4e09", 17);\n        Student s2 = new Student("\u674e\u56db", 19);\n        Student s3 = new Student("\u738b\u4e94", 18);\n\n        collection.add(s1);\n        collection.add(s2);\n        collection.add(s3);\n\n        System.out.println("\u5143\u7d20\u4e2a\u6570"+collection.size());\n        System.out.println(collection.toString());\n\n        //\u5220\u9664\n        collection.remove(s1);\n        System.out.println("\u5220\u9664\u4e4b\u540e\u7684\u4e2a\u6570"+collection.size());\n        //\u6e05\u7a7a   collection.clear();\n        //\u904d\u5386\n        //\u589e\u5f3afor\u904d\u5386\n        for (Object o : collection){\n            Student s = (Student) o;\n            System.out.println(s.toString());\n        }\n\n        //\u8fed\u4ee3\u5668\u904d\u5386\n        Iterator iterator = collection.iterator();\n        while (iterator.hasNext()){\n            Student student = (Student) iterator.next();\n            System.out.println(student.toString());\n        }\n\n        //\u5224\u65ad\n        System.out.println(collection.contains(s2));\n        System.out.println(collection.isEmpty());\n\n\n    }\n}\n')),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},"package oop3;\n\npublic class Student {\n    private String Name;\n    private int age;\n    public Student(){\n\n    }\n\n    public Student(String name, int age) {\n        Name = name;\n        this.age = age;\n    }\n\n    public String getName() {\n        return Name;\n    }\n\n    public void setName(String name) {\n        Name = name;\n    }\n\n    public int getAge() {\n        return age;\n    }\n\n    public void setAge(int age) {\n        this.age = age;\n    }\n\n    @Override\n    public String toString() {\n        return \"Student{\" +\n                \"Name='\" + Name + '\\'' +\n                \", age=\" + age +\n                '}';\n    }\n}\n")),(0,a.kt)("h2",{id:"\u4e09list\u63a5\u53e3\u4e0e\u5b9e\u73b0\u7c7b"},"\u4e09\u3001List\u63a5\u53e3\u4e0e\u5b9e\u73b0\u7c7b"),(0,a.kt)("h3",{id:"31-list\u5b50\u63a5\u53e3"},"3.1 List\u5b50\u63a5\u53e3"),(0,a.kt)("p",null,"\u7279\u70b9\uff1a\u6709\u5e8f\u3001\u6709\u4e0b\u6807\u3001\u5143\u7d20\u53ef\u4ee5\u91cd\u590d"),(0,a.kt)("h3",{id:"32-list\u63a5\u53e3\u4f7f\u7528"},"3.2 List\u63a5\u53e3\u4f7f\u7528"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},'package oop3;\n\nimport java.util.ArrayList;\nimport java.util.Iterator;\nimport java.util.List;\nimport java.util.ListIterator;\n\n/**\n * List\u5b50\u63a5\u53e3\u7684\u4f7f\u7528\n *\n *\n */\n\npublic class TestC {\n    public static void main(String[] args) {\n        List list = new ArrayList<>();\n\n        //\u6dfb\u52a0\n        list.add("\u82f9\u679c");\n        list.add("\u5c0f\u7c73");\n        list.add("\u534e\u4e3a");\n        System.out.println("\u5143\u7d20\u4e2a\u6570"+list.size());\n\n        //\u5220\u9664\n        list.remove("\u82f9\u679c");\n        System.out.println("\u5220\u9664\u4e4b\u540e\u5143\u7d20\u4e2a\u6570"+list.size());\n        System.out.println(list.toString());\n\n        //\u904d\u5386\n        //for\u904d\u5386\n        for (int i = 0; i < list.size(); i++) {\n            System.out.println(list.get(i));\n        }\n\n        //\u589e\u5f3afor\u904d\u5386\n\n        for (Object o : list){\n            System.out.println(o);\n        }\n\n\n        //\u8fed\u4ee3\u5668Iterator\u904d\u5386\n        Iterator iterator = list.iterator();\n        while (iterator.hasNext()){\n            System.out.println(iterator.next());\n        }\n\n        //\u5217\u8868\u8fed\u4ee3\u5668\u904d\u5386\uff0c\u548cIterator\u548cListIterator\u7684\u533a\u522b\uff1aListIterator\u53ef\u4ee5\u4efb\u610f\u65b9\u5411\u904d\u5386\uff0c\u6dfb\u52a0\u5220\u9664\u4fee\u6539\u5143\u7d20\n\n        ListIterator lis = list.listIterator();\n        System.out.println("===============\u5217\u8868\u8fed\u4ee3\u5668\uff1a\u4ece\u524d\u5f80\u540e==================");\n        while (lis.hasNext()){\n            System.out.println(lis.nextIndex() + ":" + lis.next());\n\n        }\n        System.out.println("===============\u5217\u8868\u8fed\u4ee3\u5668\uff1a\u4ece\u540e\u5f80\u524d==================");\n        while (lis.hasPrevious()){\n            System.out.println(lis.previousIndex() + ":" + lis.previous());\n\n        }\n\n        //\u5224\u65ad\n        System.out.println(list.contains("\u82f9\u679c"));\n        System.out.println(list.isEmpty());\n\n\n        //\u83b7\u53d6\u4f4d\u7f6e\n        System.out.println(list.indexOf("\u534e\u4e3a"));\n\n\n\n    }\n\n}\n')),(0,a.kt)("p",null,"java\u7684\u4f7f\u75282"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},'package oop3;\n\nimport java.util.ArrayList;\nimport java.util.List;\n\npublic class TestD {\n    public static void main(String[] args) {\n        List list = new ArrayList();\n\n        //\u6dfb\u52a0\u6570\u5b57\u6570\u636e\uff0c\u4f1a\u81ea\u52a8\u88c5\u7bb1\n        list.add(20);\n        list.add(30);\n        list.add(40);\n        list.add(50);\n        list.add(60);\n\n        System.out.println("\u5143\u7d20\u4e2a\u6570"+list.size());\n        System.out.println(list.toString());\n\n        //\u5220\u9664\u64cd\u4f5c\n        // list.remove(20);   //remove  \u662f\u6839\u636e\u811a\u6807\u6765\u662f\u5220\u9664\u7684\n        list.remove((Object) 20);   //\u5220\u9664\u9700\u8981\u8f6c\u6210\u5bf9\u8c61\u7c7b\u578b\n        System.out.println(list.toString());\n\n\n\n        //\u8865\u5145\u65b9\u6cd5sublist :\u8fd4\u56de\u5b50\u96c6\u5408\u3002\u542b\u5934\u4e0d\u542b\u5c3e\n        List subList = list.subList(0, 3);    //\u8fd4\u56de\u811a\u6807 0 1 2 \u7684\u5bf9\u8c61\u503c\n        System.out.println(subList.toString());\n\n\n\n\n\n\n\n    }\n}\n')),(0,a.kt)("h3",{id:"33-list\u5b9e\u73b0\u7c7b"},"3.3 List\u5b9e\u73b0\u7c7b"),(0,a.kt)("h4",{id:"331arraylist\u91cd\u70b9"},"3.3.1ArrayList\u3010\u91cd\u70b9\u3011"),(0,a.kt)("p",null,"\u200b  \u7279\u70b9\u6570\u7ec4\u7ed3\u6784\u5b9e\u73b0\uff0c\u67e5\u8be2\u5feb\u3001\u589e\u5220\u6162"),(0,a.kt)("p",null,"\u200b  \u8fd0\u884c\u6548\u7387\u5feb\uff0c\u7ebf\u7a0b\u4e0d\u5b89\u5168"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},'package oop3;\n\nimport java.util.ArrayList;\nimport java.util.Iterator;\nimport java.util.ListIterator;\n\n/**\n * ArrayList\u7684\u4f7f\u7528\n * \u6570\u7ec4\uff0c\u67e5\u627e\u904d\u5386\u5feb\uff0c\u589e\u5220\u6162\n *\n */\n\npublic class TestE {\n    public static void main(String[] args) {\n        ArrayList arrayList = new ArrayList<>();\n        Student s1 = new Student("\u5218\u5fb7\u534e", 20);\n        Student s2 = new Student("\u90ed\u5bcc\u57ce", 22);\n        Student s3 = new Student("\u6881\u671d\u4f1f", 18);\n\n        //\u589e\u52a0\n        arrayList.add(s1);\n        arrayList.add(s2);\n        arrayList.add(s3);\n        System.out.println("\u5143\u7d20\u4e2a\u6570"+arrayList.size());\n        System.out.println(arrayList.toString());\n\n        //\u5220\u9664\n        //arrayList.remove(s1);\n        arrayList.remove(new Student("\u5218\u5fb7\u534e",20));\n        System.out.println("\u5143\u7d20\u4e2a\u6570"+arrayList.size());\n\n        //\u904d\u5386\n        //\u8fed\u4ee3\u56681 \u904d\u5386\n        Iterator iterator = arrayList.iterator();\n        while (iterator.hasNext()){\n            Student s = (Student) iterator.next();\n            System.out.println(s.toString());\n        }\n\n        //\u5217\u8868\u8fed\u4ee3\u5668\u904d\u5386\n        ListIterator lit = arrayList.listIterator();\n        while (lit.hasNext()){\n            Student student = (Student)lit.next();\n            System.out.println(student.toString());\n        }\n\n        while (lit.hasPrevious()){\n            Student student = (Student)lit.previous();\n            System.out.println(student.toString());\n        }\n\n       //\u5224\u65ad\n        System.out.println(arrayList.contains(s1));\n\n        //\u67e5\u627e\u4f4d\u7f6e\n        System.out.println(arrayList.indexOf(s2));\n\n\n    }\n\n}\n')),(0,a.kt)("h4",{id:"332\u6e90\u7801\u5206\u6790"},"3.3.2\u6e90\u7801\u5206\u6790"),(0,a.kt)("p",null,"ArrayList"),(0,a.kt)("p",null,"\u9ed8\u8ba4\u5bb9\u91cf DEFAULT_CAPACITY = 10"),(0,a.kt)("p",null,"\u200b      \u6ce8\u610f\uff1a\u5982\u679c\u96c6\u5408\u6ca1\u6709\u6dfb\u52a0\u4efb\u4f55\u5143\u7d20\uff0c\u5219\u5bb9\u91cf0"),(0,a.kt)("p",null,"\u200b      \u6bcf\u6b21\u6269\u5bb9\u5927\u5c0f\u662f\u539f\u6765\u76841.5\u500d"),(0,a.kt)("p",null,"\u5b58\u653e\u5143\u7d20\u7684\u6570\u7ec4 elementData"),(0,a.kt)("p",null,"\u5b9e\u9645\u7684\u5143\u7d20\u4e2a\u6570\uff1asize"),(0,a.kt)("p",null,"\u6dfb\u52a0\u5143\u7d20  add\uff08\uff09"),(0,a.kt)("h3",{id:"34-vector\u5c11\u7528"},"3.4 Vector\uff08\u5c11\u7528\uff09"),(0,a.kt)("p",null,"\u200b  \u6570\u7ec4\u7ed3\u6784\u5b9e\u73b0\uff0c\u67e5\u8be2\u5feb\uff0c\u589e\u5220\u6162"),(0,a.kt)("p",null,"\u200b  \u8fd0\u884c\u6548\u7387\u6162\uff0c\u7ebf\u7a0b\u5b89\u5168"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},'package oop3;\n\nimport java.util.Enumeration;\nimport java.util.Vector;\n\n/**\n * Vector\u96c6\u5408\u4f7f\u7528\n * \u5b58\u50a8\u7ed3\u6784\uff1a\u6570\u7ec4\n */\npublic class TestF {\n    public static void main(String[] args) {\n        //\u521b\u5efa\n        Vector vector = new Vector<>();\n        vector.add("\u8292\u679c");\n        vector.add("\u8349\u8393");\n        vector.add("\u897f\u74dc");\n        System.out.println("\u5143\u7d20\u4e2a\u6570"+vector.size());\n        /**\n         * \u5220\u9664\n         */\n        // vector.remove(0);\n        // vector.remove("\u897f\u74dc");\n        // vector.clear();\n\n\n        //\u904d\u5386\n        //\u4f7f\u7528\u679a\u4e3e\u5668\n        Enumeration en = vector.elements();\n        while (en.hasMoreElements()){\n            String o = (String) en.nextElement();\n            System.out.println(o);\n        }\n\n        //\u5224\u65ad\n        System.out.println(vector.contains("\u897f\u74dc"));\n        System.out.println(vector.isEmpty());\n        \n        //vector\u7684\u5176\u4ed6\u65b9\u6cd5\n        vector.firstElement();\n        vector.lastElement();\n        vector.elementAt(2);\n\n    }\n}\n')),(0,a.kt)("h3",{id:"35-linkedlist--\u94fe\u8868"},"3.5 LinkedList  \uff08\u94fe\u8868\uff09"),(0,a.kt)("p",null,"\u200b  \u5b58\u50a8\u7ed3\u6784\u662f\u53cc\u5411\u94fe\u8868"),(0,a.kt)("p",null,"\u200b  \u94fe\u8868\u7ed3\u6784\u5b9e\u73b0\uff0c\u589e\u5220\u5feb\uff0c\u67e5\u8be2\u6162"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},'package oop3;\n\nimport java.util.Iterator;\nimport java.util.LinkedList;\nimport java.util.ListIterator;\n\n/**\n * LinkedList \u7684\u4f7f\u7528\n * \u5b58\u50a8\u7ed3\u6784\u662f \u53cc\u5411\u94fe\u8868\n */\n\n\npublic class TestG {\n    public static void main(String[] args) {\n        Student s1 = new Student("\u5218\u5fb7\u534e", 20);\n        Student s2 = new Student("\u90ed\u5bcc\u57ce", 22);\n        Student s3 = new Student("\u6881\u671d\u4f1f", 18);\n\n        LinkedList linkedList = new LinkedList();\n\n\n        linkedList.add(s1);\n        linkedList.add(s2);\n        linkedList.add(s3);\n        System.out.println("\u5143\u7d20\u4e2a\u6570"+ linkedList.size());\n        System.out.println(linkedList.toString());\n\n        //\u5220\u9664\n        linkedList.remove(s1);\n        System.out.println("\u5220\u9664\u4e4b\u540e"+linkedList.size());\n\n        //\u904d\u5386\n                //for\u904d\u5386\n\n        for (int i = 0; i < linkedList.size(); i++) {\n            System.out.println(linkedList.get(i));\n        }\n\n\n        //\u589e\u5f3afor\n        for (Object o:linkedList){\n            Student student = (Student) o;\n            System.out.println(o.toString());\n        }\n\n        //\u8fed\u4ee3\u5668\u904d\u5386\n        Iterator iterator = linkedList.iterator();\n        while (iterator.hasNext()){\n            Student s = (Student) iterator.next();\n            System.out.println(s.toString());\n        }\n\n        ListIterator lit = linkedList.listIterator();\n        while (lit.hasPrevious()){\n            Student student = (Student)lit.previous();\n            System.out.println(student.toString());\n        }\n\n\n        //\u5224\u65ad\n        System.out.println(linkedList.contains(s1));\n        System.out.println(linkedList.isEmpty());\n\n\n        //\u83b7\u53d6\n        System.out.println(linkedList.indexOf(s2));\n\n    }\n}\n')),(0,a.kt)("h3",{id:"37-\u6e90\u7801\u5206\u6790"},"3.7 \u6e90\u7801\u5206\u6790"),(0,a.kt)("p",null,"LinkedList\u9996\u5148\u6709\u4e09\u4e2a\u5c5e\u6027\uff1a"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"\u94fe\u8868\u5927\u5c0f\uff1a",(0,a.kt)("inlineCode",{parentName:"li"},"transient int size = 0;")),(0,a.kt)("li",{parentName:"ul"},"\uff08\u6307\u5411\uff09\u7b2c\u4e00\u4e2a\u7ed3\u70b9/\u5934\u7ed3\u70b9\uff1a",(0,a.kt)("inlineCode",{parentName:"li"},"transient Node<E> first;")),(0,a.kt)("li",{parentName:"ul"},"\uff08\u6307\u5411\uff09\u6700\u540e\u4e00\u4e2a\u7ed3\u70b9/\u5c3e\u7ed3\u70b9\uff1a",(0,a.kt)("inlineCode",{parentName:"li"},"transient Node<E> last;"))),(0,a.kt)("h4",{id:"arraylist\u548clinkedlist\u7684\u533a\u522b"},"ArrayList\u548cLinkedList\u7684\u533a\u522b"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"ArrayList\uff1a\u5fc5\u987b\u5f00\u8f9f\u8fde\u7eed\u7a7a\u95f4\uff0c\u67e5\u8be2\u5feb\uff0c\u589e\u5220\u6162\u3002"),(0,a.kt)("li",{parentName:"ul"},"LinkedList\uff1a\u65e0\u9700\u5f00\u8f9f\u8fde\u7eed\u7a7a\u95f4\uff0c\u67e5\u8be2\u6162\uff0c\u589e\u5220\u5feb\u3002")),(0,a.kt)("p",null,(0,a.kt)("img",{parentName:"p",src:"https://img.up.cdn.nahida.cn/2022/07/QQ%E6%88%AA%E5%9B%BE20220712213735.png",alt:"img"})),(0,a.kt)("h2",{id:"\u56db\u6cdb\u578b\u548c\u5de5\u5177\u680f"},"\u56db\u3001\u6cdb\u578b\u548c\u5de5\u5177\u680f"),(0,a.kt)("h3",{id:"41\u6cdb\u578b\u65b9\u6cd5"},"4.1\u6cdb\u578b\u65b9\u6cd5"),(0,a.kt)("p",null,"\u5176\u672c\u8d28\u662f\u53c2\u6570\u5316\u7c7b\u578b\uff0c\u628a\u7c7b\u578b\u4f5c\u4e3a\u53c2\u6570\u4f20\u9012\u3002"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"\u8bed\u6cd5\uff1a",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"<T,\u2026> T\u79f0\u4e3a\u7c7b\u578b\u5360\u4f4d\u7b26\uff0c\u8868\u793a\u4e00\u79cd\u5f15\u7528\u7c7b\u578b\u3002"))),(0,a.kt)("li",{parentName:"ul"},"\u597d\u5904\uff1a",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"\u63d0\u9ad8\u4ee3\u7801\u7684\u91cd\u7528\u6027\u3002"),(0,a.kt)("li",{parentName:"ul"},"\u9632\u6b62\u7c7b\u578b\u8f6c\u6362\u5f02\u5e38\uff0c\u63d0\u9ad8\u4ee3\u7801\u7684\u5b89\u5168\u6027\u3002")))),(0,a.kt)("h3",{id:"42\u6cdb\u578b\u7c7b"},"4.2\u6cdb\u578b\u7c7b"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},"package oop4;\n\n/**\n * \u6cdb\u578b\u7c7b\n * \u8bed\u6cd5  \u7c7b\u540d<T,E,K>\n *     T\u662f\u7c7b\u578b\u5360\u4f4d\u7b26\uff0c\u8868\u793a\u5f15\u7528\u7c7b\u578b\uff0c\u5982\u679c\u7f16\u5199\u591a\u4e2a\u4f7f\u7528\u9017\u53f7\u9694\u5f00\n */\n\npublic class myGeneric<T> {\n    //\u521b\u5efa\u6cdb\u578bT\n    //\u521b\u5efa\u53d8\u91cf\n    T t;\n\n    //\u6cdb\u578b\u4f5c\u4e3a\u65b9\u6cd5\u7684\u53c2\u6570\n    public void show(T t){\n        System.out.println(t);\n    }\n\n    //\u4f7f\u7528\u6cdb\u578b\u4f5c\u4e3a\u65b9\u6cd5\u7684\u8fd4\u56de\u503c\n    public T getT(){\n        return t;\n    }\n\n}\n")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"\uff08\u6ce8\u610f\u4f7f\u7528\u6cdb\u578b\u7c7b\u521b\u5efa\u5bf9\u8c61\uff09")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},'package oop4;\n\npublic class testGeneric {\n    public static void main(String[] args) {\n        //\u4f7f\u7528\u6cdb\u578b\u7c7b\u521b\u5efa\u5bf9\u8c61\n        //\u6ce8\u610f\uff1a\n        /**\n         * \u6cdb\u578b\u53ea\u80fd\u4f7f\u7528\u5f15\u7528\u7c7b\u578b\n         * \u4e0d\u540c\u6cdb\u578b\u7c7b\u5bf9\u8c61\u4e4b\u95f4\u4e0d\u80fd\u76f8\u4e92\u8d4b\u503c\n         */\n\n        myGeneric<String> myGeneric1 = new myGeneric<String>();\n        myGeneric1.t = "hello";\n        myGeneric1.show("\u5927\u5bb6\u597d");\n        String str = myGeneric1.getT();\n\n        myGeneric<Integer> myGeneric2 = new myGeneric<>();\n        myGeneric2.t = 100;\n        myGeneric2.show(200);\n        Integer intger = myGeneric2.getT();\n    }\n\n\n}\n')),(0,a.kt)("h3",{id:"43\u6cdb\u578b\u63a5\u53e3"},"4.3\u6cdb\u578b\u63a5\u53e3"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},'package oop4;\n\n/**\n * \u6cdb\u578b\u63a5\u53e3\n * \u8bed\u6cd5\uff1a  \u63a5\u53e3\u540d<T>\n */\n\npublic interface MyInterface<T> {\n    String name = "\u5f20\u4e09";\n    T server(T t);\n\n}\n')),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},"package oop4;\n\npublic class MyInterfaceImpl implements MyInterface<String> {\n\n    @Override\n    public String server(String t) {\n        System.out.println(t);\n        return null;\n    }\n}\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},"package oop4;\n\npublic class MyInterfaceImpl2<T> implements MyInterface<T>{\n    @Override\n    public T server(T t) {\n        System.out.println(t);\n        return null;\n    }\n}\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},'package oop4;\n\npublic class testGeneric {\n    public static void main(String[] args) {\n        //\u4f7f\u7528\u6cdb\u578b\u7c7b\u521b\u5efa\u5bf9\u8c61\n        //\u6ce8\u610f\uff1a\n        /**\n         * \u6cdb\u578b\u53ea\u80fd\u4f7f\u7528\u5f15\u7528\u7c7b\u578b\n         * \u4e0d\u540c\u6cdb\u578b\u7c7b\u5bf9\u8c61\u4e4b\u95f4\u4e0d\u80fd\u76f8\u4e92\u8d4b\u503c\n         */\n\n        //\u63a5\u53e3\n        MyInterfaceImpl impl = new MyInterfaceImpl();\n        impl.server("xxxxxx");\n\n        //\u63a5\u53e3\u7684\u7b2c\u4e8c\u79cd\u4f7f\u7528\u65b9\u6cd5\n        MyInterfaceImpl2<Integer> impl2 = new MyInterfaceImpl2<>();\n        impl2.server(100);\n\n    }\n\n\n}\n')),(0,a.kt)("h3",{id:"44-\u6cdb\u578b\u65b9\u6cd5"},"4.4 \u6cdb\u578b\u65b9\u6cd5"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},'package oop4;\n\n/**\n * \u6cdb\u578b\u65b9\u6cd5\n * \u8bed\u6cd5    <T> \u8fd4\u56de\u503c\u7c7b\u578b\n */\n\npublic class myGenericMeth {\n\n    //\u6cdb\u578b\u65b9\u6cd5\n    public <T> void show(T t){\n        System.out.println("\u6cdb\u578b\u65b9\u6cd5" + t);\n    }\n\n    //\u6cdb\u578b\u65b9\u6cd5\u7684\u591a\u79cd\u65b9\u5f0f\n\n//    public static <T> T show2(T t){\n//        T t2;\n//        System.out.println("\u6cdb\u578b\u65b9\u6cd5" + t);\n//        return t;\n //   }\n}\n')),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},'package oop4;\n\npublic class testGeneric {\n    public static void main(String[] args) {\n        //\u4f7f\u7528\u6cdb\u578b\u7c7b\u521b\u5efa\u5bf9\u8c61\n        //\u6ce8\u610f\uff1a\n        /**\n         * \u6cdb\u578b\u53ea\u80fd\u4f7f\u7528\u5f15\u7528\u7c7b\u578b\n         * \u4e0d\u540c\u6cdb\u578b\u7c7b\u5bf9\u8c61\u4e4b\u95f4\u4e0d\u80fd\u76f8\u4e92\u8d4b\u503c\n         */\n\n        //\u8c03\u7528\u6cdb\u578b\u65b9\u6cd5\uff0c\u53ef\u4ee5\u6709\u591a\u79cd\u7c7b\u578b\n        myGenericMeth myGen = new myGenericMeth();\n        myGen.show("\u4e2d\u56fd\u52a0\u6cb9");\n        myGen.show(200);\n        myGen.show(3.14);\n\n    }\n\n\n}\n')),(0,a.kt)("p",null,"\u63d0\u9ad8\u4ee3\u7801\u7684\u91cd\u7528\u6027"),(0,a.kt)("h3",{id:"45\u6cdb\u578b\u96c6\u5408"},"4.5\u6cdb\u578b\u96c6\u5408"),(0,a.kt)("p",null,"\u53c2\u6570\u5316\u7c7b\u578b\u3001\u7c7b\u578b\u5b89\u5168\u7684\u96c6\u5408\uff0c\u5f3a\u5236\u96c6\u5408\u5143\u7d20\u7684\u7c7b\u578b\u5fc5\u987b\u4e00\u81f4\u3002"),(0,a.kt)("p",null,"\u7279\u70b9"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"\u7f16\u8bd1\u65f6\u5373\u53ef\u68c0\u67e5\uff0c\u800c\u975e\u8fd0\u884c\u65f6\u629b\u51fa\u5f02\u5e38\u3002"),(0,a.kt)("li",{parentName:"ul"},"\u8bbf\u95ee\u65f6\uff0c\u4e0d\u5fc5\u7c7b\u578b\u8f6c\u6362\uff08\u62c6\u7bb1\uff09\u3002"),(0,a.kt)("li",{parentName:"ul"},"\u4e0d\u540c\u6cdb\u578b\u6307\u5c16\u5f15\u7528\u4e0d\u80fd\u76f8\u4e92\u8d4b\u503c\uff0c\u6cdb\u578b\u4e0d\u5b58\u5728\u591a\u6001\u3002")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},'package oop3;\n\nimport java.util.ArrayList;\nimport java.util.Iterator;\n\npublic class TsetH {\n    public static void main(String[] args) {\n        Student s1 = new Student("\u5218\u5fb7\u534e", 20);\n        Student s2 = new Student("\u90ed\u5bcc\u57ce", 22);\n        Student s3 = new Student("\u6881\u671d\u4f1f", 18);\n\n        ArrayList a = new ArrayList();\n        a.add(s1);\n        a.add(s2);\n        a.add(s3);\n\n        Iterator<Student> iterator = a.iterator();      //iterator\u8f6c\u6210\u4e86Student\uff0c\u5c31\u53c8\u4e0d\u9700\u8981\u50cf\u4e4b\u524d\u7684\u4e00\u6837\uff0c\u5230while\u91cc\u8fb9\u518d\u591a\u6b21\u5f3a\u8f6c\u3002\u5176\u5e95\u5c42\u7684\u4ee3\u7801\u4e5f\u662f\u7528\u6765\u6cdb\u578b\u7684\u65b9\u6cd5\n        while (iterator.hasNext()){\n            Student student = iterator.next();\n            System.out.println(student.toString());\n        }\n    }\n}\n')),(0,a.kt)("h2",{id:"\u4e94set\u63a5\u53e3\u4e0e\u5b9e\u73b0\u7c7b"},"\u4e94\u3001Set\u63a5\u53e3\u4e0e\u5b9e\u73b0\u7c7b"),(0,a.kt)("p",null,"Set\u63a5\u53e3\u7684\u7279\u70b9\uff1a\u65e0\u5e8f\u3001\u65e0\u4e0b\u6807\uff0c\u5143\u7d20\u4e0d\u53ef\u91cd\u590d"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"\u65b9\u6cd5"),"\uff1a\u5168\u90e8\u7ee7\u627f\u81eaCollection\u4e2d\u7684\u65b9\u6cd5\u3002"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},'package oop5;\n\nimport java.util.HashSet;\nimport java.util.Iterator;\nimport java.util.Set;\n\n/**\n * \u6d4b\u8bd5set\u63a5\u53e3\u7684\u4f7f\u7528\n * \u7279\u70b9\uff1a\u65e0\u5e8f\u6ca1\u6709\u4e0b\u6807\uff0c\u4e0d\u80fd\u91cd\u590d\n */\npublic class Demo1 {\n    public static void main(String[] args) {\n        Set<String> set = new HashSet<>();\n        set.add("\u82f9\u679c");\n        set.add("\u534e\u4e3a");\n        set.add("\u5c0f\u7c73");\n\n        System.out.println("\u6570\u636e\u4e2a\u6570"+set.size());\n        System.out.println(set.toString());\n\n        //\u5220\u9664\n        set.remove("\u5c0f\u7c73");\n        System.out.println(set.toString());\n\n        //\u904d\u5386\uff08\u91cd\u70b9\uff09\n        //\u4f7f\u7528\u589e\u5f3afor\u904d\u5386\n        for (Object o : set){\n            System.out.println(o);\n        }\n\n        //\u4f7f\u7528\u8fed\u4ee3\u5668\u904d\u5386\n        Iterator<String> iterator = set.iterator();\n        while (iterator.hasNext()){\n            System.out.println(iterator.next());\n        }\n\n        //\u5224\u65ad\n        System.out.println(set.contains("\u534e\u4e3a"));\n        System.out.println(set.isEmpty());\n\n\n    }\n}\n')),(0,a.kt)("h3",{id:"51hashset\u91cd\u70b9"},"5.1HashSet\uff08\u91cd\u70b9\uff09"),(0,a.kt)("h4",{id:"511-\u4f7f\u7528\u4e00"},"5.1.1 \u4f7f\u7528\u4e00"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},'package oop5;\n\nimport java.util.HashSet;\nimport java.util.Iterator;\n\n/**\n * HashSet\u96c6\u5408\u7684\u4f7f\u7528\n * \u5b58\u50a8\u7ed3\u6784\uff1a\u54c8\u5e0c\u8868\uff08\u6570\u7ec4+\u94fe\u8868+\u7ea2\u9ed1\u6811\uff09\n */\npublic class Demo2 {\n    public static void main(String[] args) {\n        //\u65b0\u5efa\u96c6\u5408\n        HashSet<String> hashSet = new HashSet<>();\n        hashSet.add("\u7518\u96e8");\n        hashSet.add("\u4e03\u4e03");\n        hashSet.add("\u53ef\u8389");\n        hashSet.add("\u53f6\u5170");\n\n\n        System.out.println(hashSet.size());    //\u5143\u7d20\u4e2a\u6570\n        System.out.println(hashSet.toString());\n        //\u5220\u9664\n        hashSet.remove("\u53f6\u5170");\n        System.out.println(hashSet.size());\n\n        //\u904d\u5386\n        //\u589e\u5f3afor\n        for (Object o : hashSet){\n            System.out.println(o);\n        }\n\n        //\u8fed\u4ee3\u5668\u904d\u5386\n        Iterator<String> iterator = hashSet.iterator();\n        while (iterator.hasNext()){\n            System.out.println(iterator.next());\n        }\n\n        //\u5224\u65ad\n        System.out.println(hashSet.contains("\u53ef\u8389"));\n        System.out.println(hashSet.isEmpty());\n    }\n}\n')),(0,a.kt)("h4",{id:"512\u4f7f\u7528\u4e8c"},"5.1.2\u4f7f\u7528\u4e8c"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},"package oop5;\n\nimport java.util.Objects;\n\n/**\n * \u4eba\u7c7b\n */\n\npublic class Person {\n    private String name;\n    private int age;\n    public Person(){\n\n    }\n\n    public Person(String name, int age) {\n        this.name = name;\n        this.age = age;\n    }\n\n    public String getName() {\n        return name;\n    }\n\n    public void setName(String name) {\n        this.name = name;\n    }\n\n    public int getAge() {\n        return age;\n    }\n\n    public void setAge(int age) {\n        this.age = age;\n    }\n\n    @Override\n    public String toString() {\n        return \"Person{\" +\n                \"name='\" + name + '\\'' +\n                \", age=\" + age +\n                '}';\n    }\n\n//    @Override\n//    public int hashCode() {\n//        final int prime = 31;\n//        int result = 1;\n//        result = prime * result +age;\n//        result = prime * result +((name == null) ? 0 : name.hashCode());\n//        return result;\n//\n//    }\n//\n//    /**\n//     * hashCode\u65b9\u6cd5\u91cc\u4e3a\u4ec0\u4e48\u8981\u4f7f\u752831\u8fd9\u4e2a\u6570\u5b57\u5927\u6982\u6709\u4e24\u4e2a\u539f\u56e0\uff1a\n//     * 31\u662f\u4e00\u4e2a\u8d28\u6570\uff0c\u8fd9\u6837\u7684\u6570\u5b57\u5728\u8ba1\u7b97\u65f6\u53ef\u4ee5\u5c3d\u91cf\u51cf\u5c11\u6563\u5217\u51b2\u7a81\u3002\n//     * \u53ef\u4ee5\u63d0\u9ad8\u6267\u884c\u6548\u7387\uff0c\u56e0\u4e3a31*i=(i<<5)-i\uff0c31\u4e58\u4ee5\u4e00\u4e2a\u6570\u53ef\u4ee5\u8f6c\u6362\u6210\u79fb\u4f4d\u64cd\u4f5c\uff0c\u8fd9\u6837\u80fd\u5feb\u4e00\u70b9\uff1b\u4f46\u662f\u4e5f\u6709\u7f51\u4e0a\u4e00\u4e9b\u4eba\u5bf9\u8fd9\u4e24\u70b9\u63d0\u51fa\u8d28\u7591\u3002\n//     *\n//     *\n//     * link:https://lazydog036.gitee.io/2020/10/29/JAVA%E9%9B%86%E5%90%88%E6%A1%86%E6%9E%B6/#Set%E9%9B%86%E5%90%88%E6%A6%82%E8%BF%B0\n//     */\n//\n//\n//    @Override\n//    public boolean equals(Object obj) {    //\u91cd\u5199 equals\n//        if (this==obj){\n//            return true;\n//        }\n//        if (obj==null){\n//            return false;\n//        }if (obj instanceof Person){\n//            Person person = (Person) obj;\n//            if (this.name.equals(person.getName())&&this.age==person.getAge()){\n//                return true;\n//            }\n//        }\n//        return false;\n//    }\n//\n    //\u5feb\u901f\u751f\u6210hashcode\u548cequals\n    //ALT + Insert\n    //\u5982\u4e0b\uff1b\u65b0\u7248\u7684IDEA\u751f\u6210\u7684\u5185\u5bb9\u53ef\u80fd\u4f1a\u8ddf\u6559\u7a0b\u7684\u4e0d\u4e00\u6837\n\n\n    @Override\n    public boolean equals(Object o) {\n        if (this == o) return true;\n        if (o == null || getClass() != o.getClass()) return false;\n        Person person = (Person) o;\n        return age == person.age && name.equals(person.name);\n    }\n\n    @Override\n    public int hashCode() {\n        return Objects.hash(name, age);\n    }\n}\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},'package oop5;\n\nimport java.util.HashSet;\nimport java.util.Iterator;\n\n/**\n * hashset\u7684\u4f7f\u75282\n * \u5b58\u50a8\u7ed3\u6784\uff1a  \u54c8\u5e0c\u8868\uff08\u6570\u7ec4+\u94fe\u8868+\u7ea2\u9ed1\u6811\uff09\n * \u5b58\u50a8\u8fc7\u7a0b\uff1a\n *       \uff081\uff09\u6839\u636ehashcode\uff0c\u8ba1\u7b97\u4fdd\u5b58\u7684\u4f4d\u7f6e\uff0c\u5982\u679c\u6b64\u4f4d\u7f6e\u4e3a\u7a7a\u5219\u76f4\u63a5\u4e3a\u7a7a\u3002\u5982\u679c\u4e0d\u4e3a\u7a7a\u6267\u884c\u7b2c\u4e8c\u6b65\n *       \uff082\uff09\u518d\u6267\u884cequals\u65b9\u6cd5\uff0c\u5982\u679cequals\u65b9\u6cd5\u4e3atrue\uff0c\u5219\u8ba4\u4e3a\u91cd\u590d\uff0c\u5426\u5219\uff0c\u5f62\u6210\u94fe\u8868\n */\n\npublic class Demo3 {\n    public static void main(String[] args) {\n        HashSet<Person> hashSet = new HashSet<>();\n        Person person1 = new Person("\u7518\u96e8",3000);\n        Person person2 = new Person("\u949f\u79bb",6000);\n        Person person3 = new Person("\u516b\u91cd\u795e\u5b50",500);\n\n        hashSet.add(person1);\n        hashSet.add(person2);\n        hashSet.add(person3);\n        //\u91cd\u590d\u4e0d\u80fd\u6dfb\u52a0\u8fdb\u53bb\n        hashSet.add(new Person("\u7518\u96e8",3000));\n\n        System.out.println(hashSet.toString());\n        System.out.println(hashSet.size());\n\n        //\u5220\u9664\n        hashSet.remove(person1);\n        hashSet.remove(new Person("\u516b\u91cd\u795e\u5b50",500));    //\u53ef\u4ee5\u5220\u6389\u3002\u4f46\u662f\u6ca1\u6709\u91cd\u5199hashcode\u548cequals\u7684\u65f6\u5019\u5c31\u5220\u4e0d\u4e86\n\n        //\u904d\u5386\n        for ( Person  p : hashSet){\n            System.out.println(p.toString());\n        }\n\n        Iterator<Person> iterator = hashSet.iterator();\n        while (iterator.hasNext()){\n            System.out.println(iterator.next());\n        }\n\n        //\u5224\u65ad\n        System.out.println(hashSet.contains(person1));\n        System.out.println(hashSet.isEmpty());\n        System.out.println(hashSet.contains(new Person("\u949f\u79bb",6000)));\n\n\n    }\n}\n')),(0,a.kt)("h3",{id:"52-treeset"},"5.2 TreeSet"),(0,a.kt)("h4",{id:"521treeset\u6982\u8ff0"},"5.2.1TreeSet\u6982\u8ff0"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"\u57fa\u4e8e\u6392\u5e8f\u987a\u5e8f\u5b9e\u73b0\u4e0d\u91cd\u590d\u3002"),(0,a.kt)("li",{parentName:"ul"},"\u5b9e\u73b0\u4e86SortedSet\u63a5\u53e3\uff0c\u5bf9\u96c6\u5408\u5143\u7d20\u81ea\u52a8\u6392\u5e8f\u3002"),(0,a.kt)("li",{parentName:"ul"},"\u5143\u7d20\u5bf9\u8c61\u7684\u7c7b\u578b\u5fc5\u987b\u5b9e\u73b0Comparable\u63a5\u53e3\uff0c\u6307\u5b9a\u6392\u5e8f\u89c4\u5219\u3002"),(0,a.kt)("li",{parentName:"ul"},"\u901a\u8fc7CompareTo\u65b9\u6cd5\u786e\u5b9a\u662f\u5426\u4e3a\u91cd\u590d\u5143\u7d20\u3002")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},'package oop5;\n\nimport java.util.Iterator;\nimport java.util.TreeSet;\n\n/**\n * TreeSet\u7684\u4f7f\u7528\n * \u5b58\u50a8\u7ed3\u6784\uff1a\u7ea2\u9ed1\u6811\n */\npublic class Demo4 {\n    public static void main(String[] args) {\n        //\u521b\u5efa\u4e00\u4e2a\u96c6\u5408\n        TreeSet<String> treeSet = new TreeSet();\n\n        treeSet.add("xyz");\n        treeSet.add("abc");\n        treeSet.add("hello");\n\n\n        System.out.println(treeSet.size());\n        System.out.println(treeSet.toString());\n\n        treeSet.remove("xyz");\n        System.out.println(treeSet.size());\n\n\n        //\u904d\u5386\n        for (Object o : treeSet){\n            System.out.println(o);\n        }\n\n        Iterator<String> iterator = treeSet.iterator();\n        while (iterator.hasNext()){\n            System.out.println(iterator.next());\n        }\n\n        //\u5224\u65ad\n        System.out.println(treeSet.contains("abc"));\n    }\n}\n')),(0,a.kt)("h4",{id:"522-treeset\u4f7f\u7528"},"5.2.2 TreeSet\u4f7f\u7528"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},'package oop5;\n\nimport java.util.Iterator;\nimport java.util.TreeSet;\n\n/**\n * \u4f7f\u7528TreeSet\u4fdd\u5b58\u6570\u636e\n * \u5b58\u50a8\u7ed3\u6784\uff1a\u7ea2\u9ed1\u6811\n * \u8981\u6c42\uff1a\u5143\u7d20\u5fc5\u987b\u5b9e\u73b0Comparable\u63a5\u53e3,compareTo()\u65b9\u6cd5\u8fd4\u56de\u503c\u4e3a0\uff0c\u8ba4\u4e3a\u662f\u91cd\u590d\u5143\u7d20\n */\n\npublic class Demo5 {\n    public static void main(String[] args) {\n        TreeSet<Person> people = new TreeSet<>();\n        Person person1 = new Person("\u7518\u96e8",3000);\n        Person person2 = new Person("\u949f\u79bb",6000);\n        Person person3 = new Person("\u516b\u91cd\u795e\u5b50",500);\n\n        //\u6dfb\u52a0\n        people.add(person1);\n        people.add(person2);\n        people.add(person3);\n        System.out.printf("\u5143\u7d20\u4e2a\u6570%d%n", people.size());\n        System.out.println(people.toString());\n\n        //\u5220\u9664\n        people.remove(person1);\n        System.out.println(people.size());\n\n        //\u904d\u5386\n        for (Person p : people){\n            System.out.println(p);\n        }\n\n        Iterator<Person> iterator = people.iterator();\n        while (iterator.hasNext()){\n            System.out.println(iterator.next());\n        }\n\n        //\u5224\u65ad\n\n        System.out.println(people.contains(person1));\n    }\n}\n')),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},"package oop5;\n\nimport java.util.Objects;\n\n/**\n * \u4eba\u7c7b\n */\n\npublic class Person implements Comparable<Person>{     //implements Comparable<Person>\n    private String name;\n    private int age;\n    public Person(){\n\n    }\n\n    public Person(String name, int age) {\n        this.name = name;\n        this.age = age;\n    }\n\n    public String getName() {\n        return name;\n    }\n\n    public void setName(String name) {\n        this.name = name;\n    }\n\n    public int getAge() {\n        return age;\n    }\n\n    public void setAge(int age) {\n        this.age = age;\n    }\n\n    @Override\n    public String toString() {\n        return \"Person{\" +\n                \"name='\" + name + '\\'' +\n                \", age=\" + age +\n                '}';\n    }\n\n//    @Override\n//    public int hashCode() {\n//        final int prime = 31;\n//        int result = 1;\n//        result = prime * result +age;\n//        result = prime * result +((name == null) ? 0 : name.hashCode());\n//        return result;\n//\n//    }\n//\n//    /**\n//     * hashCode\u65b9\u6cd5\u91cc\u4e3a\u4ec0\u4e48\u8981\u4f7f\u752831\u8fd9\u4e2a\u6570\u5b57\u5927\u6982\u6709\u4e24\u4e2a\u539f\u56e0\uff1a\n//     * 31\u662f\u4e00\u4e2a\u8d28\u6570\uff0c\u8fd9\u6837\u7684\u6570\u5b57\u5728\u8ba1\u7b97\u65f6\u53ef\u4ee5\u5c3d\u91cf\u51cf\u5c11\u6563\u5217\u51b2\u7a81\u3002\n//     * \u53ef\u4ee5\u63d0\u9ad8\u6267\u884c\u6548\u7387\uff0c\u56e0\u4e3a31*i=(i<<5)-i\uff0c31\u4e58\u4ee5\u4e00\u4e2a\u6570\u53ef\u4ee5\u8f6c\u6362\u6210\u79fb\u4f4d\u64cd\u4f5c\uff0c\u8fd9\u6837\u80fd\u5feb\u4e00\u70b9\uff1b\u4f46\u662f\u4e5f\u6709\u7f51\u4e0a\u4e00\u4e9b\u4eba\u5bf9\u8fd9\u4e24\u70b9\u63d0\u51fa\u8d28\u7591\u3002\n//     *\n//     *\n//     * link:https://lazydog036.gitee.io/2020/10/29/JAVA%E9%9B%86%E5%90%88%E6%A1%86%E6%9E%B6/#Set%E9%9B%86%E5%90%88%E6%A6%82%E8%BF%B0\n//     */\n//\n//\n//    @Override\n//    public boolean equals(Object obj) {    //\u91cd\u5199 equals\n//        if (this==obj){\n//            return true;\n//        }\n//        if (obj==null){\n//            return false;\n//        }if (obj instanceof Person){\n//            Person person = (Person) obj;\n//            if (this.name.equals(person.getName())&&this.age==person.getAge()){\n//                return true;\n//            }\n//        }\n//        return false;\n//    }\n//\n    //\u5feb\u901f\u751f\u6210hashcode\u548cequals\n    //ALT + Insert\n    //\u5982\u4e0b\uff1b\u65b0\u7248\u7684IDEA\u751f\u6210\u7684\u5185\u5bb9\u53ef\u80fd\u4f1a\u8ddf\u6559\u7a0b\u7684\u4e0d\u4e00\u6837\n\n\n    @Override\n    public boolean equals(Object o) {\n        if (this == o) return true;\n        if (o == null || getClass() != o.getClass()) return false;\n        Person person = (Person) o;\n        return age == person.age && name.equals(person.name);\n    }\n\n    @Override\n    public int hashCode() {\n        return Objects.hash(name, age);\n    }\n\n    //\u5148\u6309\u59d3\u540d\u6bd4\u8f83\uff0c\u518d\u4ffa\u5e74\u9f84\u6bd4\n    @Override\n    public int compareTo(Person o) {\n        int n1 = this.getName().compareTo(o.getName());\n        int n2 = this.age - o.getAge();\n        return n1==0?n2:n1;\n    }\n}\n")),(0,a.kt)("h4",{id:"523-comparato\u63a5\u53e3"},"5.2.3 Comparato\u63a5\u53e3"),(0,a.kt)("p",null,"\u521b\u5efa\u96c6\u5408\u65f6\uff0c\u5e76\u6307\u5b9a\u6bd4\u8f83\u89c4\u5219\uff0c\u5219person\u7c7b\u4e0d\u9700\u8981implements Comparable"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},'package oop5;\n\nimport java.util.Comparator;\nimport java.util.TreeSet;\n\n/**\n * TreeSet\u96c6\u5408\u7684\u4f7f\u7528\n * Comparator\uff1a\u5b9e\u73b0\u5b9a\u5236\u6bd4\u8f83\uff08\u6bd4\u8f83\u5668\uff09\n * Comparable: \u53ef\u6bd4\u8f83\u7684\n */\n\npublic class Demo6 {\n    public static void main(String[] args) {\n\n        TreeSet<Person> people= new TreeSet<>(new Comparator<Person>() {\n            //\u521b\u5efa\u96c6\u5408\uff0c\u5e76\u6307\u5b9a\u6bd4\u8f83\u89c4\u5219\n            @Override\n            public int compare(Person o1, Person o2) {\n                int n1 = o1.getAge() - o2.getAge();\n                int n2 = o1.getName().compareTo(o2.getName());\n                return n1 == 0?n2:n1;\n            }\n        });\n        Person person1 = new Person("\u7518\u96e8",3000);\n        Person person2 = new Person("\u949f\u79bb",6000);\n        Person person3 = new Person("\u516b\u91cd\u795e\u5b50",500);\n        people.add(person1);\n        people.add(person2);\n        people.add(person3);\n        System.out.printf("\u5143\u7d20\u4e2a\u6570%d%n", people.size());\n        System.out.println(people.toString());\n\n    }\n}\n')),(0,a.kt)("h4",{id:"524-treeset\u6848\u4f8b"},"5.2.4 TreeSet\u6848\u4f8b"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},'package oop5;\n\nimport java.util.Comparator;\nimport java.util.TreeSet;\n\n/**\n * \u4f7f\u7528\u7684TreeSet\u96c6\u5408\u5b9e\u73b0\u5b57\u7b26\u4e32\u6309\u7167\u957f\u5ea6\u8fdb\u884c\u6392\u5e8f\n * Comparator\u63a5\u53e3\u5b9e\u73b0\u5b9a\u5236\u6bd4\u8f83\n */\n\npublic class Demo7 {\n    public static void main(String[] args) {\n        TreeSet<String> treeSet = new TreeSet<>(new Comparator<String>() {\n            @Override\n            public int compare(String o1, String o2) {\n                int n1 = o1.length()-o2.length();\n                int n2 = o1.compareTo(o2);\n\n                return n1 == 0 ? n2:n1;\n            }\n        });\n        treeSet.add("\u82ad\u82ad\u62c9");\n        treeSet.add("\u7434");\n        treeSet.add("\u80e1\u6843");\n        treeSet.add("\u5df4\u5df4\u6258\u65af");\n        treeSet.add("\u6469\u62c9\u514b\u65af");\n        treeSet.add("\u9b48");\n        treeSet.add("\u7518\u96e8");\n        treeSet.add("\u963f\u65af\u6258\u6d1b\u5409\u65af\xb7\u83ab\u5a1c\xb7\u6885\u59ec\u65af\u56fe\u65af");\n        treeSet.add("\u83f2\u8c22\u5c14\xb7\u51af\xb7\u9732\u5f17\u65bd\u6d1b\u65af\xb7\u90a3\u83f2\u591a\u7279");\n        treeSet.add("\u5fa1\u5efa\u9e23\u795e\u4e3b\u5c0a\u5927\u5fa1\u6240\u5927\u4eba");\n\n        System.out.println(treeSet.toString());\n\n\n\n\n\n\n    }\n}\n')),(0,a.kt)("h2",{id:"\u516dmap\u63a5\u53e3\u4e0e\u5b9e\u73b0\u7c7b"},"\u516d\u3001Map\u63a5\u53e3\u4e0e\u5b9e\u73b0\u7c7b"),(0,a.kt)("h3",{id:"61-map\u96c6\u5408\u6982\u8ff0"},"6.1 Map\u96c6\u5408\u6982\u8ff0"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"\u7528\u4e8e\u5b58\u50a8\u4efb\u610f\u952e\u503c\u5bf9(Key-Value)\u3002"),(0,a.kt)("li",{parentName:"ol"},"\u952e\uff1a\u65e0\u5e8f\u3001\u65e0\u4e0b\u6807\u3001\u4e0d\u5141\u8bb8\u91cd\u590d\uff08\u552f\u4e00\uff09\u3002"),(0,a.kt)("li",{parentName:"ol"},"\u503c\uff1a\u65e0\u5e8f\u3001\u65e0\u4e0b\u6807\u3001\u5141\u8bb8\u91cd\u590d\u3002")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"\u7279\u70b9"),"\uff1a\u5b58\u50a8\u4e00\u5bf9\u6570\u636e\uff08Key-Value\uff09\uff0c\u65e0\u5e8f\u3001\u65e0\u4e0b\u6807\uff0c\u952e\u4e0d\u53ef\u91cd\u590d\u3002"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"\u65b9\u6cd5"),"\uff1a"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},'package oop6;\n\nimport java.util.HashMap;\nimport java.util.Map;\nimport java.util.Set;\n\n/**\n * Map\u63a5\u53e3\u7684\u4f7f\u7528\n * \u7279\u70b9\uff1a\n *      \u5b58\u50a8\u952e\u503c\u5bf9\n *      \u952e\u4e0d\u80fd\u91cd\u590d\uff0c\u503c\u53ef\u4ee5\u91cd\u590d\n *      \u65e0\u5e8f\n *\n */\n\npublic class Demo1 {\n    public static void main(String[] args) {\n        Map<String,String> map = new HashMap<>();\n\n        //\u6dfb\u52a0\u5143\u7d20\n        map.put("CN","\u4e2d\u56fd");\n        map.put("US","\u7f8e\u56fd");\n        map.put("UK","\u82f1\u56fd");\n        map.put("JP","\u65e5\u672c");\n        map.put("FR","\u6cd5\u56fd");\n        map.put("RU","\u4fc4\u7f57\u65af");\n\n        System.out.println(map.size());   //\u4e2a\u6570\n        System.out.println(map.toString());\n\n        map.remove("US");    //key\u952e\u503c\u662f\u7b2c\u4e00\u4e2a\uff0c\u4e14\u662f\u552f\u4e00\u7684\n        System.out.println(map.toString());\n\n\n        //\u904d\u5386\n        //\u4f7f\u7528keySet\u904d\u5386\n        Set<String> keySet = map.keySet();\n        for (String key : keySet){\n            System.out.println(key + map.get(key));\n        }\n        //\u4f7f\u7528entrySet()\u65b9\u6cd5\u904d\u5386 ,\u4f7f\u7528entrySet();\u6548\u7387\u8f83\u9ad8\n        Set<Map.Entry<String, String>> entries = map.entrySet();\n        for (Map.Entry<String, String> entry :entries){\n            System.out.println(entry.getKey() + entry.getValue());\n        }\n\n        System.out.println(map.containsKey("CN"));\n        System.out.println(map.containsValue("\u6cf0\u56fd"));\n    }\n}\n')),(0,a.kt)("h3",{id:"62-map\u63a5\u53e3"},"6.2 Map\u63a5\u53e3"),(0,a.kt)("h3",{id:"63-hashmap\u4f7f\u7528\u91cd\u70b9"},"6.3 HashMap\u4f7f\u7528\uff08\u91cd\u70b9\uff09"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},'package oop6;\n\nimport java.util.HashMap;\nimport java.util.HashSet;\nimport java.util.Map;\n\n/**\n * HashMap\u7684\u4f7f\u7528\n * \u5b58\u50a8\u7ed3\u6784\uff1a\n *      \u54c8\u5e0c\u8868\u3001\u6570\u7ec4\u3001\u7ea2\u9ed1\u6811\n *  \u4f7f\u7528key\u53efhashcode\u548cequals\u4f5c\u4e3a\u91cd\u590d\u5224\u65ad\u5bf9\u8c61\n */\n\npublic class Demo2 {\n    public static void main(String[] args) {\n        HashMap<Student , String> students = new HashMap<Student , String>();\n\n        Student s1 = new Student("\u7518\u96e8", 100);\n        Student s2 = new Student("\u795e\u91cc\u7eeb\u534e", 101);\n        Student s3 = new Student("\u8bfa\u8bf6\u5c14", 102);\n\n        students.put(s1,"\u7483\u6708");\n        students.put(s2,"\u7a3b\u59bb");\n        students.put(s3,"\u8499\u5fb7");\n        students.put(new Student("\u8bfa\u8bf6\u5c14", 102),"\u8499\u5fb7");\n        System.out.println(students.size());\n        System.out.println(students.toString());\n\n\n        //\u5220\u9664\n    //    students.remove(s1);\n        System.out.println(students.toString());\n\n        //\u904d\u5386\n        //\u4f7f\u7528keySet\n        for (Student key : students.keySet()){\n            System.out.println(key.toString() + students.get(key));\n        }\n\n        //\u4f7f\u7528entrySet\n        for (Map.Entry<Student , String> entry:students.entrySet()){\n            System.out.println(entry.getKey() + entry.getValue());\n        }\n\n\n        //\u5224\u65ad\n        System.out.println(students.containsKey(s1));\n        System.out.println(students.containsValue("\u987b\u5f25"));\n\n\n    }\n}\n')),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},"package oop6;\n\nimport java.util.Objects;\n\npublic class Student {\n    private String name;\n    private int ID;\n    public Student(){\n\n    }\n\n    public Student(String name, int ID) {\n        this.name = name;\n        this.ID = ID;\n    }\n\n    public String getName() {\n        return name;\n    }\n\n    public void setName(String name) {\n        this.name = name;\n    }\n\n    public int getID() {\n        return ID;\n    }\n\n    public void setID(int ID) {\n        this.ID = ID;\n    }\n\n    @Override\n    public String toString() {\n        return \"Student{\" +\n                \"name='\" + name + '\\'' +\n                \", ID=\" + ID +\n                '}';\n    }\n\n    @Override\n    public boolean equals(Object o) {\n        if (this == o) return true;\n        if (o == null || getClass() != o.getClass()) return false;\n        Student student = (Student) o;\n        return ID == student.ID && name.equals(student.name);\n    }\n\n    @Override\n    public int hashCode() {\n        return Objects.hash(name, ID);\n    }\n}\n")),(0,a.kt)("p",null,"\u6e90\u7801\u5206\u6790\u603b\u7ed3\uff1a"),(0,a.kt)("p",null,"1\u3001HashMap\u521a\u521b\u5efa\u65f6\uff0ctable\uff08\u54c8\u5e0c\u6876\uff09\u4e3anull\uff0c\u8282\u7701\u7a7a\u95f4\u3002\u5f53\u6dfb\u52a0\u7b2c\u4e00\u4e2a\u5143\u7d20\u65f6\uff0c\u5bb9\u91cf\u8c03\u6574\u4e3a16"),(0,a.kt)("p",null,"2\u3001\u5f53\u5143\u7d20\u4e2a\u6570\u5927\u4e8e\u9608\u503c\uff0816*0.75=12\uff09\u65f6\uff0c\u4f1a\u8fdb\u884c\u6269\u5bb9\uff0c\u6269\u5bb9\u540e\u7684\u5927\u5c0f\u4e3a\u539f\u6765\u7684\u4e24\u500d\uff0c\u76ee\u7684\u662f\u51cf\u5c11\u8c03\u6574\u5143\u7d20\u7684\u4e2a\u6570"),(0,a.kt)("p",null,"3\u3001JDK1.8 \u5f53\u6bcf\u4e2a\u94fe\u8868\u957f\u5ea6\u5927\u4e8e8\u65f6\uff0c\u5e76\u4e14\u6570\u7ec4\u957f\u5ea6\u5927\u4e8e64\uff0c \u4f1a\u8c03\u6574\u4e3a\u7ea2\u9ed1\u6811\uff0c\u76ee\u7684\u63d0\u9ad8\u6548\u7387"),(0,a.kt)("p",null,"4\u3001JDK1.8 \u5f53\u94fe\u8868\u957f\u5ea6\u5c0f\u4e8e6\u65f6\uff0c\u8c03\u6574\u4e3a\u94fe\u8868"),(0,a.kt)("p",null,"5\u3001JDK1.8 \u4ee5\u524d\uff0c\u94fe\u8868\u662f\u5934\u63d2\u5165\uff0c\u4e4b\u540e\u662f\u5c3e\u90e8\u63d2\u5165"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"HashSet\u7684\u5e95\u5c42\u4e5f\u662f\u4f7f\u7528\u7684HashMap")),(0,a.kt)("h3",{id:"64hashtable\u548cproperties"},"6.4Hashtable\u548cProperties"),(0,a.kt)("p",null,"HashTable\uff08\u4e86\u89e3\u5373\u53ef\uff0c\u5df2\u7ecf\u5f03\u7528\uff09"),(0,a.kt)("p",null,"JDK1.0\u5c31\u5b58\u5728\uff0c\u7ebf\u7a0b\u5b89\u5168\uff0c\u8fd0\u884c\u6548\u7387\u4f4e\uff0c\u4e0d\u5141\u8bb8null\u4f5c\u4e3akey\u548cvalue"),(0,a.kt)("p",null,"Properties\uff08\u53ef\u5728IO\u6846\u67b6\u5b66\u4e60\uff09"),(0,a.kt)("p",null,"HashTable\u7684\u5b50\u7c7b\uff0c\u8981\u6c42key\u548cvalue\u90fd\u662fString\u3002\u901a\u5e38\u7528\u4e8e\u914d\u7f6e\u6587\u4ef6\u7684\u8bfb\u53d6"),(0,a.kt)("h3",{id:"65-treemap"},"6.5 TreeMap"),(0,a.kt)("p",null,"\u5b9e\u73b0\u4e86SortedMap\u63a5\u53e3\uff08\u662fMap\u7684\u5b50\u63a5\u53e3\uff09\uff0c\u53ef\u4ee5\u5bf9key\u81ea\u52a8\u6392\u5e8f\u3002"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},'package oop6;\n\nimport java.util.Comparator;\nimport java.util.Map;\nimport java.util.TreeMap;\n\n/**\n * TreeMap\u7684\u4f7f\u7528\n * \u5b58\u50a8\u7ed3\u6784\uff1a\u7ea2\u9ed1\u6811\n */\n\npublic class Demo3 {\n    public static void main(String[] args) {\n  //      TreeMap<Student, String> treeMap = new TreeMap<Student, String>();\n  //\u4f7f\u7528\u6bd4\u8f83\u5668Comparator\u4e5f\u53ef\u4ee5\n        TreeMap<Student, String> treeMap = new TreeMap<Student, String>(new Comparator<Student>() {\n            @Override\n            public int compare(Student o1, Student o2) {\n                int n2 = o1.getID() - o2.getID();\n                return n2;\n            }\n        });\n        Student s1 = new Student("\u7518\u96e8", 100);\n        Student s2 = new Student("\u795e\u91cc\u7eeb\u534e", 101);\n        Student s3 = new Student("\u8bfa\u8bf6\u5c14", 102);\n        treeMap.put(s1,"\u7483\u6708");\n        treeMap.put(s2,"\u7a3b\u59bb");\n        treeMap.put(s3,"\u8499\u5fb7");\n    //    treeMap.put(new Student("\u8bfa\u8bf6\u5c14", 102),"\u987b\u5f25");\n        System.out.println(treeMap.toString());\n\n        treeMap.remove(s3);\n\n\n        //\u904d\u5386\n        //\u4f7f\u7528keySet\n        for (Student key : treeMap.keySet()){\n            System.out.println(key + treeMap.get(key));\n        }\n\n        //\u4f7f\u7528entrySet\n        for (Map.Entry<Student,String> entry:treeMap.entrySet()){\n            System.out.println(entry.getKey()+entry.getValue());\n        }\n\n\n        //\u5224\u65ad\n        System.out.println(treeMap.containsKey(s1));\n        System.out.println(treeMap.containsValue("\u987b\u5f25"));\n\n    }\n}\n')),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},"package oop6;\n\nimport java.util.Objects;\n\npublic class Student implements Comparable<Student>{\n    private String name;\n    private int ID;\n    public Student(){\n\n    }\n\n    public Student(String name, int ID) {\n        this.name = name;\n        this.ID = ID;\n    }\n\n    public String getName() {\n        return name;\n    }\n\n    public void setName(String name) {\n        this.name = name;\n    }\n\n    public int getID() {\n        return ID;\n    }\n\n    public void setID(int ID) {\n        this.ID = ID;\n    }\n\n    @Override\n    public String toString() {\n        return \"Student{\" +\n                \"name='\" + name + '\\'' +\n                \", ID=\" + ID +\n                '}';\n    }\n\n    @Override\n    public boolean equals(Object o) {\n        if (this == o) return true;\n        if (o == null || getClass() != o.getClass()) return false;\n        Student student = (Student) o;\n        return ID == student.ID && name.equals(student.name);\n    }\n\n    @Override\n    public int hashCode() {\n        return Objects.hash(name, ID);\n    }\n\n    @Override\n    public int compareTo(Student o) {\n        int n1 = this.name.compareTo(o.getName());\n        int n2 = this.ID - o.ID;\n        return n2;\n    }\n}\n")),(0,a.kt)("h2",{id:"\u4e03collections--\u5de5\u5177\u7c7b"},"\u4e03\u3001Collections  \u5de5\u5177\u7c7b"),(0,a.kt)("p",null,"\u96c6\u5408\u5de5\u5177\u7c7b\uff0c\u5b9a\u4e49\u4e86\u9664\u4e86\u5b58\u53d6\u4ee5\u5916\u7684\u96c6\u5408\u5e38\u7528\u65b9\u6cd5"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"public static void reverse(List<?> list)"),"//\u53cd\u8f6c\u96c6\u5408\u4e2d\u5143\u7d20\u7684\u987a\u5e8f"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"public static void shuffle(List<?> list)"),"//\u968f\u673a\u91cd\u7f6e\u96c6\u5408\u5143\u7d20\u7684\u987a\u5e8f"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"public static void sort(List<T> list)"),"//\u5347\u5e8f\u6392\u5e8f\uff08\u5143\u7d20\u7c7b\u578b\u5fc5\u987b\u5b9e\u73b0Comparable\u63a5\u53e3\uff09")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},'package oop6;\n\nimport java.util.*;\n\n/**\n * \u6f14\u793aCollections\u5de5\u5177\u7c7b\u7684\u4f7f\u7528\n *\n */\npublic class Demo4 {\n    public static void main(String[] args) {\n        List<Integer> list = new ArrayList<>();\n        list.add(20);\n        list.add(15);\n        list.add(12);\n        list.add(30);\n        list.add(6);\n        System.out.println(list.toString());\n\n        //shot\u6392\u5e8f  \u5347\u5e8f\n        Collections.sort(list);\n        System.out.println(list.toString());\n\n        //binarySearch   \u67e5\u627e\u662f\u5426\u542b\u6709\n        int i = Collections.binarySearch(list,13);\n        System.out.println(i);\n\n        //copy \u8d4b\u503c\n        List<Integer> DEST = new ArrayList<>();\n        for (int j = 0; j < list.size(); j++) {\n            DEST.add(0);\n        }\n        Collections.copy(DEST,list);\n        System.out.println(DEST.toString());\n\n        //reverse\u53cd\u8f6c\n        Collections.reverse(list);\n        System.out.println(list);\n\n        //shuffle \u6253\u4e71\n        Collections.shuffle(list);\n        System.out.println(list);\n\n        //list \u8f6c\u6570\u7ec4\n        Integer[] array = list.toArray(new Integer[0]);\n        System.out.println(array.length);\n        System.out.println(Arrays.toString(array));\n\n        //\u6570\u7ec4\u8f6clist\n        String [] name = { "\u6e29\u8fea","\u949f\u79bb","\u5f71"};\n        //\u96c6\u5408\u662f\u4e00\u4e2a\u53d7\u9650\u96c6\u5408\uff0c\u4e0d\u80fd\u6dfb\u52a0\u548c\u5220\u9664\n        List<String> list1 = Arrays.asList(name);\n        System.out.println(list1);\n        //\u57fa\u672c\u7c7b\u578b\u6570\u7ec4\u8f6c\u4e3a\u96c6\u5408\u65f6\uff0c\u9700\u8981\u8f6c\u6210\u5305\u88c5\u7c7b\n        Integer[] nums = {100,200,300};\n        List<Integer> list2 = Arrays.asList(nums);\n        System.out.println(list2);\n\n\n    }\n}\n\n')))}m.isMDXComponent=!0}}]);